// Mocks generated by Mockito 5.4.2 from annotations
// in abc_jobs/test/cv_widgets_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i4;

import 'package:abc_jobs/candidates/services/cv_service.dart' as _i3;
import 'package:http/http.dart' as _i2;
import 'package:mockito/mockito.dart' as _i1;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeResponse_0 extends _i1.SmartFake implements _i2.Response {
  _FakeResponse_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [CVService].
///
/// See the documentation for Mockito's code generation for more information.
class MockCVService extends _i1.Mock implements _i3.CVService {
  MockCVService() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i4.Future<_i2.Response> postExperience({
    required String? position,
    required String? companyName,
    required String? startDate,
    required String? endDate,
    required String? place,
    required List<dynamic>? skills,
    required int? candidateId,
    required _i2.Client? client,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #postExperience,
          [],
          {
            #position: position,
            #companyName: companyName,
            #startDate: startDate,
            #endDate: endDate,
            #place: place,
            #skills: skills,
            #candidateId: candidateId,
            #client: client,
          },
        ),
        returnValue: _i4.Future<_i2.Response>.value(_FakeResponse_0(
          this,
          Invocation.method(
            #postExperience,
            [],
            {
              #position: position,
              #companyName: companyName,
              #startDate: startDate,
              #endDate: endDate,
              #place: place,
              #skills: skills,
              #candidateId: candidateId,
              #client: client,
            },
          ),
        )),
      ) as _i4.Future<_i2.Response>);

  @override
  _i4.Future<_i2.Response> postEducation({
    required String? university,
    required String? subject,
    required String? startDate,
    required String? endDate,
    required List<dynamic>? skills,
    required int? candidateId,
    required _i2.Client? client,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #postEducation,
          [],
          {
            #university: university,
            #subject: subject,
            #startDate: startDate,
            #endDate: endDate,
            #skills: skills,
            #candidateId: candidateId,
            #client: client,
          },
        ),
        returnValue: _i4.Future<_i2.Response>.value(_FakeResponse_0(
          this,
          Invocation.method(
            #postEducation,
            [],
            {
              #university: university,
              #subject: subject,
              #startDate: startDate,
              #endDate: endDate,
              #skills: skills,
              #candidateId: candidateId,
              #client: client,
            },
          ),
        )),
      ) as _i4.Future<_i2.Response>);

  @override
  _i4.Future<_i2.Response> postCertificates({
    required String? nameCertificate,
    required String? company,
    required String? expeditionDate,
    required String? dateExpiry,
    required int? candidateId,
    required _i2.Client? client,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #postCertificates,
          [],
          {
            #nameCertificate: nameCertificate,
            #company: company,
            #expeditionDate: expeditionDate,
            #dateExpiry: dateExpiry,
            #candidateId: candidateId,
            #client: client,
          },
        ),
        returnValue: _i4.Future<_i2.Response>.value(_FakeResponse_0(
          this,
          Invocation.method(
            #postCertificates,
            [],
            {
              #nameCertificate: nameCertificate,
              #company: company,
              #expeditionDate: expeditionDate,
              #dateExpiry: dateExpiry,
              #candidateId: candidateId,
              #client: client,
            },
          ),
        )),
      ) as _i4.Future<_i2.Response>);

  @override
  _i4.Future<_i2.Response> postBasicInfo({
    required String? name,
    required String? lastname,
    required String? phoneNumber,
    required String? numberId,
    required String? location,
    required int? candidateId,
    required _i2.Client? client,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #postBasicInfo,
          [],
          {
            #name: name,
            #lastname: lastname,
            #phoneNumber: phoneNumber,
            #numberId: numberId,
            #location: location,
            #candidateId: candidateId,
            #client: client,
          },
        ),
        returnValue: _i4.Future<_i2.Response>.value(_FakeResponse_0(
          this,
          Invocation.method(
            #postBasicInfo,
            [],
            {
              #name: name,
              #lastname: lastname,
              #phoneNumber: phoneNumber,
              #numberId: numberId,
              #location: location,
              #candidateId: candidateId,
              #client: client,
            },
          ),
        )),
      ) as _i4.Future<_i2.Response>);

  @override
  _i4.Future<_i2.Response> getBasicinfo({
    required int? candidateId,
    required _i2.Client? client,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #getBasicinfo,
          [],
          {
            #candidateId: candidateId,
            #client: client,
          },
        ),
        returnValue: _i4.Future<_i2.Response>.value(_FakeResponse_0(
          this,
          Invocation.method(
            #getBasicinfo,
            [],
            {
              #candidateId: candidateId,
              #client: client,
            },
          ),
        )),
      ) as _i4.Future<_i2.Response>);

  @override
  _i4.Future<_i2.Response> getEducation({
    required int? candidateId,
    required _i2.Client? client,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #getEducation,
          [],
          {
            #candidateId: candidateId,
            #client: client,
          },
        ),
        returnValue: _i4.Future<_i2.Response>.value(_FakeResponse_0(
          this,
          Invocation.method(
            #getEducation,
            [],
            {
              #candidateId: candidateId,
              #client: client,
            },
          ),
        )),
      ) as _i4.Future<_i2.Response>);

  @override
  _i4.Future<_i2.Response> getExperience({
    required int? candidateId,
    required _i2.Client? client,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #getExperience,
          [],
          {
            #candidateId: candidateId,
            #client: client,
          },
        ),
        returnValue: _i4.Future<_i2.Response>.value(_FakeResponse_0(
          this,
          Invocation.method(
            #getExperience,
            [],
            {
              #candidateId: candidateId,
              #client: client,
            },
          ),
        )),
      ) as _i4.Future<_i2.Response>);

  @override
  _i4.Future<_i2.Response> getCertificates({
    required int? candidateId,
    required _i2.Client? client,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #getCertificates,
          [],
          {
            #candidateId: candidateId,
            #client: client,
          },
        ),
        returnValue: _i4.Future<_i2.Response>.value(_FakeResponse_0(
          this,
          Invocation.method(
            #getCertificates,
            [],
            {
              #candidateId: candidateId,
              #client: client,
            },
          ),
        )),
      ) as _i4.Future<_i2.Response>);

  @override
  _i4.Future<Map<String, dynamic>> getResponse(
    _i2.Client? client,
    String? Url,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #getResponse,
          [
            client,
            Url,
          ],
        ),
        returnValue:
            _i4.Future<Map<String, dynamic>>.value(<String, dynamic>{}),
      ) as _i4.Future<Map<String, dynamic>>);

  @override
  _i4.Future<Map<String, dynamic>> getResponseBasicInfo() =>
      (super.noSuchMethod(
        Invocation.method(
          #getResponseBasicInfo,
          [],
        ),
        returnValue:
            _i4.Future<Map<String, dynamic>>.value(<String, dynamic>{}),
      ) as _i4.Future<Map<String, dynamic>>);

  @override
  _i4.Future<Map<String, dynamic>> getResponseExperience() =>
      (super.noSuchMethod(
        Invocation.method(
          #getResponseExperience,
          [],
        ),
        returnValue:
            _i4.Future<Map<String, dynamic>>.value(<String, dynamic>{}),
      ) as _i4.Future<Map<String, dynamic>>);

  @override
  _i4.Future<Map<String, dynamic>> getResponseEducation() =>
      (super.noSuchMethod(
        Invocation.method(
          #getResponseEducation,
          [],
        ),
        returnValue:
            _i4.Future<Map<String, dynamic>>.value(<String, dynamic>{}),
      ) as _i4.Future<Map<String, dynamic>>);

  @override
  _i4.Future<Map<String, dynamic>> getResponseCertification() =>
      (super.noSuchMethod(
        Invocation.method(
          #getResponseCertification,
          [],
        ),
        returnValue:
            _i4.Future<Map<String, dynamic>>.value(<String, dynamic>{}),
      ) as _i4.Future<Map<String, dynamic>>);
}
